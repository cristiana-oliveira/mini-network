Resources:
  # VPC
  MiniNetworkVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: !Sub  ${AWS::StackName}
  # SUBNETS
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 0, Fn::GetAZs: !Ref  'AWS::Region' ]
      VpcId: !Ref  MiniNetworkVPC
      Tags:
        - Key: Name
          Value: PrivateSubnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: True
      AvailabilityZone: !Select [ 1, Fn::GetAZs: !Ref  'AWS::Region' ]
      VpcId: !Ref  MiniNetworkVPC
      Tags:
        - Key: Name
          Value: PublicSubnet
  # INTERNET GATEWAY
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub  ${AWS::StackName}-Gateway
  VpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MiniNetworkVPC
      InternetGatewayId: !Ref InternetGateway
  #Route Table Configurations
  PubRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: PubRoute
      VpcId: !Ref  MiniNetworkVPC
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: PriRoute
      VpcId: !Ref  MiniNetworkVPC
    #Subnet to Route Table associations
  PubSubRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref  PubRouteTable
      SubnetId: !Ref  PublicSubnet
  InternalAppRouteAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref  PrivateRouteTable
      SubnetId: !Ref  PrivateSubnet
  #Routes Configuration
  InternetGatewayRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref  PubRouteTable
  # ELASTIC IP
  NatPublicIP:
    Type: AWS::EC2::EIP
    DependsOn: MiniNetworkVPC
    Properties:
      Domain: vpc
  # NAT GATEWAY
  NatGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: NatPublicIP
    Properties:
      SubnetId: !Ref PublicSubnet
      AllocationId: !GetAtt NatPublicIP.AllocationId
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
Outputs:
  #VPC
  MiniNetworkVPC:
    Description: Details about vpc
    Value: !Ref  MiniNetworkVPC
    Export:
      Name: MiniNetworkVPC
  PrivateSubnetOut:
    Description: Output of the private internal subnet
    Value: !Ref  PrivateSubnet
    Export:
      Name: PrivateSubnet
  PublicSubnetOut:
    Description: Output of the Public subnet
    Value: !Ref  PublicSubnet
    Export:
      Name: PublicSubnet